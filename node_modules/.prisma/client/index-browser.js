
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.14.0
 * Query Engine version: 717184b7b35ea05dfa71a3236b7af656013e1e49
 */
Prisma.prismaVersion = {
  client: "6.14.0",
  engine: "717184b7b35ea05dfa71a3236b7af656013e1e49"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  password_hash: 'password_hash',
  role: 'role',
  avatar_url: 'avatar_url',
  created_at: 'created_at'
};

exports.Prisma.CourseScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  level: 'level',
  mentor_id: 'mentor_id',
  is_published: 'is_published',
  created_at: 'created_at'
};

exports.Prisma.MaterialScalarFieldEnum = {
  id: 'id',
  course_id: 'course_id',
  title: 'title',
  content: 'content',
  type: 'type',
  order_index: 'order_index',
  created_at: 'created_at'
};

exports.Prisma.EnrollmentScalarFieldEnum = {
  id: 'id',
  student_id: 'student_id',
  course_id: 'course_id',
  progress_percent: 'progress_percent',
  created_at: 'created_at'
};

exports.Prisma.ProgressScalarFieldEnum = {
  id: 'id',
  enrollment_id: 'enrollment_id',
  material_id: 'material_id',
  status: 'status',
  last_updated: 'last_updated'
};

exports.Prisma.ForumPostScalarFieldEnum = {
  id: 'id',
  course_id: 'course_id',
  user_id: 'user_id',
  title: 'title',
  content: 'content',
  created_at: 'created_at'
};

exports.Prisma.ForumCommentScalarFieldEnum = {
  id: 'id',
  post_id: 'post_id',
  user_id: 'user_id',
  content: 'content',
  created_at: 'created_at'
};

exports.Prisma.ForumLikeScalarFieldEnum = {
  id: 'id',
  post_id: 'post_id',
  user_id: 'user_id',
  created_at: 'created_at'
};

exports.Prisma.ChallengeScalarFieldEnum = {
  id: 'id',
  course_id: 'course_id',
  title: 'title',
  description: 'description',
  points: 'points',
  start_at: 'start_at',
  end_at: 'end_at',
  is_active: 'is_active'
};

exports.Prisma.SubmissionScalarFieldEnum = {
  id: 'id',
  challenge_id: 'challenge_id',
  student_id: 'student_id',
  repo_url: 'repo_url',
  demo_url: 'demo_url',
  note: 'note',
  score: 'score',
  feedback: 'feedback',
  created_at: 'created_at'
};

exports.Prisma.LeaderboardScalarFieldEnum = {
  id: 'id',
  student_id: 'student_id',
  total_points: 'total_points',
  updated_at: 'updated_at'
};

exports.Prisma.ScheduleScalarFieldEnum = {
  id: 'id',
  course_id: 'course_id',
  title: 'title',
  start_at: 'start_at',
  end_at: 'end_at',
  meet_link: 'meet_link',
  created_at: 'created_at'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  type: 'type',
  message: 'message',
  is_read: 'is_read',
  created_at: 'created_at'
};

exports.Prisma.ProjectScalarFieldEnum = {
  id: 'id',
  student_id: 'student_id',
  title: 'title',
  screenshot_url: 'screenshot_url',
  demo_url: 'demo_url',
  description: 'description',
  is_published: 'is_published',
  created_at: 'created_at'
};

exports.Prisma.TestimonialScalarFieldEnum = {
  id: 'id',
  student_id: 'student_id',
  name_override: 'name_override',
  photo_url: 'photo_url',
  quote: 'quote',
  rating: 'rating',
  is_approved: 'is_approved',
  created_at: 'created_at'
};

exports.Prisma.BadgeScalarFieldEnum = {
  id: 'id',
  code: 'code',
  name: 'name',
  description: 'description',
  icon_url: 'icon_url'
};

exports.Prisma.UserBadgeScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  badge_id: 'badge_id',
  awarded_at: 'awarded_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  name: 'name',
  email: 'email',
  password_hash: 'password_hash',
  avatar_url: 'avatar_url'
};

exports.Prisma.CourseOrderByRelevanceFieldEnum = {
  title: 'title',
  description: 'description'
};

exports.Prisma.MaterialOrderByRelevanceFieldEnum = {
  title: 'title',
  content: 'content'
};

exports.Prisma.ForumPostOrderByRelevanceFieldEnum = {
  title: 'title',
  content: 'content'
};

exports.Prisma.ForumCommentOrderByRelevanceFieldEnum = {
  content: 'content'
};

exports.Prisma.ChallengeOrderByRelevanceFieldEnum = {
  title: 'title',
  description: 'description'
};

exports.Prisma.SubmissionOrderByRelevanceFieldEnum = {
  repo_url: 'repo_url',
  demo_url: 'demo_url',
  note: 'note',
  feedback: 'feedback'
};

exports.Prisma.ScheduleOrderByRelevanceFieldEnum = {
  title: 'title',
  meet_link: 'meet_link'
};

exports.Prisma.NotificationOrderByRelevanceFieldEnum = {
  type: 'type',
  message: 'message'
};

exports.Prisma.ProjectOrderByRelevanceFieldEnum = {
  title: 'title',
  screenshot_url: 'screenshot_url',
  demo_url: 'demo_url',
  description: 'description'
};

exports.Prisma.TestimonialOrderByRelevanceFieldEnum = {
  name_override: 'name_override',
  photo_url: 'photo_url',
  quote: 'quote'
};

exports.Prisma.BadgeOrderByRelevanceFieldEnum = {
  code: 'code',
  name: 'name',
  description: 'description',
  icon_url: 'icon_url'
};
exports.Role = exports.$Enums.Role = {
  student: 'student',
  mentor: 'mentor',
  admin: 'admin'
};

exports.CourseLevel = exports.$Enums.CourseLevel = {
  Beginner: 'Beginner',
  Intermediate: 'Intermediate',
  Advanced: 'Advanced'
};

exports.MaterialType = exports.$Enums.MaterialType = {
  text: 'text',
  video: 'video',
  pdf: 'pdf',
  quiz: 'quiz',
  code: 'code'
};

exports.ProgressStatus = exports.$Enums.ProgressStatus = {
  belum: 'belum',
  sedang: 'sedang',
  selesai: 'selesai'
};

exports.Prisma.ModelName = {
  User: 'User',
  Course: 'Course',
  Material: 'Material',
  Enrollment: 'Enrollment',
  Progress: 'Progress',
  ForumPost: 'ForumPost',
  ForumComment: 'ForumComment',
  ForumLike: 'ForumLike',
  Challenge: 'Challenge',
  Submission: 'Submission',
  Leaderboard: 'Leaderboard',
  Schedule: 'Schedule',
  Notification: 'Notification',
  Project: 'Project',
  Testimonial: 'Testimonial',
  Badge: 'Badge',
  UserBadge: 'UserBadge'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
